$$$$ @CLIMT
*23456789123456789123456789123456789123456789123456789123456789123456789
****************************************************
****************************************************
*
*  PROCEDURE "CHOIX" DE CONDITIONS AUX LIMITES
*             THERMIQUES
*  L.GELEBART                              12/09
****************************************************
*****************************************************
DEBPROC @CLIMT CLIM1*PROCEDUR MAIL0*MAILLAGE CONT0*TABLE;
RIGCLP FCLP0 = CLIM1 MAIL0 CONT0;
FINPROC RIGCLP FCLP0;
*********************************************
* FIN DE LA PROCEDURE @CLIMT
*********************************************
$$$$


$$$$ @CLTH
*23456789123456789123456789123456789123456789123456789123456789123456789
************************************************************************
************************************************************************
*
*  PROCEDURE POUR CONDITIONS AUX LIMITES 
*
*    EN GRADIENT DE TEMPERATURE HOMOGENE
*
*  L.GELEBART                       01/09
************************************************************************
************************************************************************
DEBPROC @CLTH MAIL0*MAILLAGE CONT0*TABLE;
GTX = CONT0 . 1; GTY = CONT0 . 2; GTZ = CONT0 . 3;
*
*  Identification des points et surfaces exterieures
*    pour application des CL
*=====================================================
SURF0 = ENVE MAIL0;
XMIN = MINI (COOR 1 SURF0);
YMIN = MINI (COOR 2 SURF0);
ZMIN = MINI (COOR 3 SURF0);
*
*  Application des conditions de gradient de temperature homogene
*================================================================
RIGTOT = BLOQUE T SURF0;
DEPT0= (GTX * ((COOR 1 SURF0) - XMIN))+(GTY * ((COOR 2 SURF0) - YMIN)) 
      +(GTZ * ((COOR 3 SURF0) - ZMIN));
DEPTOT = DEPI RIGTOT DEPT0;
FINPROC RIGTOT DEPTOT;
************************************************************************
*  FIN DE @CLTH
************************************************************************
$$$$



$$$$ @CLPT
*23456789123456789123456789123456789123456789123456789123456789123456789
************************************************************************
************************************************************************
*
*  PROCEDURE POUR CONDITIONS AUX LIMITES 
*
*    PERIODIQUES, PILOTAGE TEMPERATURE
*
*  L.GELEBART                       01/09
************************************************************************
************************************************************************
DEBPROC @CLPT MAIL0*MAILLAGE CONT0*TABLE;
GTX = CONT0 . 1; GTY = CONT0 . 2; GTZ = CONT0 . 3;
*
* SURFACES POUR CL PERIODIQUES
*==============================
ENVE0 = ENVE MAIL0;
ENVE_PT0 = CHANGE ENVE0 POI1;
XMAX = MAXI (COOR 1 ENVE0);XMIN = MINI (COOR 1 ENVE0);
YMAX = MAXI (COOR 2 ENVE0);YMIN = MINI (COOR 2 ENVE0);
ZMAX = MAXI (COOR 3 ENVE0);ZMIN = MINI (COOR 3 ENVE0);
LX0 = XMAX - XMIN; LY0 = YMAX - YMIN; LZ0 = ZMAX - ZMIN;
elim0 = LX0 * 1.e-6;
*
PXMAX = ENVE_PT0 POIN 'PLAN' 
 (XMAX 0. 0.) (XMAX 1. 0.) (XMAX 0. 1.) elim0;
PXMIN = ENVE_PT0 POIN 'PLAN' 
 (XMIN 0. 0.) (XMIN 1. 0.) (XMIN 0. 1.) elim0;
PYMAX = ENVE_PT0 POIN 'PLAN' 
 (0. YMAX 0.) (1. YMAX 0.) (0. YMAX 1.) elim0;
PYMIN = ENVE_PT0 POIN 'PLAN' 
 (0. YMIN 0.) (1. YMIN 0.) (0. YMIN 1.) elim0;
PZMAX = ENVE_PT0 POIN 'PLAN' 
 (0. 0. ZMAX) (1. 0. ZMAX) (0. 1. ZMAX) elim0;
PZMIN = ENVE_PT0 POIN 'PLAN' 
 (0. 0. ZMIN) (1. 0. ZMIN) (0. 1. ZMIN) elim0;
*
SXMAX0 = ENVE0 ELEM APPUYE STRICTEMENT PXMAX;
SXMIN = ENVE0 ELEM APPUYE STRICTEMENT PXMIN;
SYMAX0 = ENVE0 ELEM APPUYE STRICTEMENT PYMAX;
SYMIN = ENVE0 ELEM APPUYE STRICTEMENT PYMIN;
SZMAX0 = ENVE0 ELEM APPUYE STRICTEMENT PZMAX;
SZMIN = ENVE0 ELEM APPUYE STRICTEMENT PZMIN;
*
SXMAX = SXMIN PLUS (LX0 0. 0.);
SYMAX = SYMIN PLUS (0. LY0 0.);
SZMAX = SZMIN PLUS (0. 0. LZ0);
*
* VERIFICATION QUE LE MAILLAGE EST BIEN PERIODIQUE
* (nbre de noeuds elimines entre 2 faces paralleles 
*  = nombre de noeuds dans la face)
*---------------------------------------------------
list (NBNO SXMAX0);list (NBNO SXMIN);
elim elim0 SXMAX MAIL0;
list (NBNO SYMAX0);list (NBNO SYMIN);
elim elim0 SYMAX MAIL0;
list (NBNO SZMAX0);list (NBNO SZMIN);
elim elim0 SZMAX MAIL0;
*
* APPLICATION DU GRADIENT DE TEMPERATURE AVEC PERIODICITE
*========================================================
*
* Conditions dans la direction X
*--------------------------------
CLP1T = RELA 1. T SXMAX - 1. T SXMIN;
depCLP1T = DEPI CLP1T (GTX * LX0);
*
* Conditions dans la direction Y
*--------------------------------
CLP2T = RELA 1. T SYMAX - 1. T SYMIN;
depCLP2T = DEPI CLP2T (GTY * LY0);
*
* Conditions dans la direction Z
*--------------------------------
CLP3T = RELA 1. T SZMAX - 1. T SZMIN;
depCLP3T = DEPI CLP3T (GTZ * LZ0);
*
* Bloquage du mvt corps rigide
*--------------------------------
A0 = ENVE_PT0 POINT PROC (XMIN YMIN ZMIN);
CR0 = BLOQUE T A0;
*
DEPTOT = depCLP1T et (depCLP2T et depCLP3T );
RIGTOT = CR0 ET (CLP1T et (CLP2T et CLP3T));
FINPROC RIGTOT DEPTOT;
************************************************************************
*  FIN DE @CLPT
************************************************************************
$$$$



$$$$ @CLFH
*23456789123456789123456789123456789123456789123456789123456789123456789
************************************************************************
************************************************************************
*
*  PROCEDURE POUR CONDITIONS AUX LIMITES 
*
*    EN FLUX DE CHALEUR HOMOGENE
*
*  L.GELEBART                       01/09
************************************************************************
************************************************************************
DEBPROC @CLFH MAIL0*MAILLAGE CONT0*TABLE;
FLX = CONT0 . 1; FLY = CONT0 . 2; FLZ = CONT0 . 3;
*
* IDENTIFICATION DES SURFACES POUR CL 
*=======================================
ENVE0 = ENVE MAIL0;
ENVE_PT0 = CHANGE ENVE0 POI1;
XMAX = MAXI (COOR 1 ENVE0);XMIN = MINI (COOR 1 ENVE0);
YMAX = MAXI (COOR 2 ENVE0);YMIN = MINI (COOR 2 ENVE0);
ZMAX = MAXI (COOR 3 ENVE0);ZMIN = MINI (COOR 3 ENVE0);
LX0 = XMAX - XMIN; LY0 = YMAX - YMIN; LZ0 = ZMAX - ZMIN;
elim0 = LX0 * 1.e-6;
*
PXMAX = ENVE_PT0 POIN 'PLAN' 
 (XMAX 0. 0.) (XMAX 1. 0.) (XMAX 0. 1.) elim0;
PXMIN = ENVE_PT0 POIN 'PLAN' 
 (XMIN 0. 0.) (XMIN 1. 0.) (XMIN 0. 1.) elim0;
PYMAX = ENVE_PT0 POIN 'PLAN' 
 (0. YMAX 0.) (1. YMAX 0.) (0. YMAX 1.) elim0;
PYMIN = ENVE_PT0 POIN 'PLAN' 
 (0. YMIN 0.) (1. YMIN 0.) (0. YMIN 1.) elim0;
PZMAX = ENVE_PT0 POIN 'PLAN' 
 (0. 0. ZMAX) (1. 0. ZMAX) (0. 1. ZMAX) elim0;
PZMIN = ENVE_PT0 POIN 'PLAN' 
 (0. 0. ZMIN) (1. 0. ZMIN) (0. 1. ZMIN) elim0;
*
SXMAX = ENVE0 ELEM APPUYE STRICTEMENT PXMAX;
SXMIN = ENVE0 ELEM APPUYE STRICTEMENT PXMIN;
SYMAX = ENVE0 ELEM APPUYE STRICTEMENT PYMAX;
SYMIN = ENVE0 ELEM APPUYE STRICTEMENT PYMIN;
SZMAX = ENVE0 ELEM APPUYE STRICTEMENT PZMAX;
SZMIN = ENVE0 ELEM APPUYE STRICTEMENT PZMIN;
*
*  APPLICATION DES CONDITION DE FLUX HOMOGENE
*================================================================
MOD0 = MAIL0 MODE THERMIQUE;
FLXMAX = FLUX MOD0 (0. - FLX) SXMAX;
FLXMIN = FLUX MOD0 FLX SXMIN; 
FLYMAX = FLUX MOD0 (0. - FLY) SYMAX;
FLYMIN = FLUX MOD0 FLY SYMIN; 
FLZMAX = FLUX MOD0 (0. - FLZ) SZMAX;
FLZMIN = FLUX MOD0 FLZ SZMIN; 
*
FLXX = FLXMAX ET FLXMIN;
FLYY = FLYMAX ET FLYMIN;
FLZZ = FLZMAX ET FLZMIN;
DEPTOT = FLXX ET FLYY ET FLZZ;
*
* Bloquage du mvt corps rigide
*--------------------------------
A0 = ENVE_PT0 POINT PROC (XMIN YMIN ZMIN);
CR0 = BLOQUE T A0;

FINPROC CR0 DEPTOT;
************************************************************************
*  FIN DE @CLFH
************************************************************************
$$$$



$$$$ @KEFFT
*23456789123456789123456789123456789123456789123456789123456789123456789
************************************************************************
************************************************************************
*
*  PROCEDURE DE CALCUL DU COMPORTEMENT THERMIQUE EFFECTIF 
*                 D'UNE MICROSTRUTURE
*
*  L. GELEBART 07/01/2009
*
************************************************************************
************************************************************************
DEBPROC @KEFFT MOD1*MMODEL  MAT1*MCHAML CLIM1*PROCEDUR AMPL1*FLOTTANT 
               VISU1*TABLE;
*
MAIL1 = MOD1 EXTR 'MAIL';
AMPL2 = AMPL1 * 1.e-6;
* 
*                       DEFINITION DES 3 CHARGEMENTS
*===================================================
ETAB = TABLE;
ETAB . 1 = TABLE;
ETAB . 1 . 1 = AMPL1; ETAB . 1 . 2 = AMPL2; ETAB . 1 . 3 = AMPL2;
ETAB . 2 = TABLE;
ETAB . 2 . 1 = AMPL2; ETAB . 2 . 2 = AMPL1; ETAB . 2 . 3 = AMPL2;
ETAB . 3 = TABLE;
ETAB . 3 . 1 = AMPL2; ETAB . 3 . 2 = AMPL2; ETAB . 3 . 3 = AMPL1;
*
*                                    INITIALISATIONS
*===================================================
*   Systeme lineaire (9x9)
*-------------------
KSL0 = TABLE; KSL1 = TABLE;
VSL0 = TABLE; VSL1 = TABLE;
I0 = 0;
REPETE BOUI0 9;
I0 = I0 + 1;
VSL0 . I0 = 0.; VSL1 . I0 = 0.;
KSL0 . I0 = TABLE; KSL1 . I0 = TABLE;
J0 = 0;
REPETE BOUJ0 9;
J0 = J0 + 1;
KSL0 . I0 . J0 = 0.;KSL1 . I0 . J0 = 0.;
FIN BOUJ0;
FIN BOUI0;
*
*   tables de sortie (flux et gradients de Temp  moyens)
*----------------------------------------------------------
C = TABLE;
C . 1 = TABLE; C . 2 = TABLE; C . 3 = TABLE;
*
*
D = TABLE;
D . 1 = TABLE; D . 2 = TABLE; D . 3 = TABLE;
*
*                         BOUCLE SUR LES CHARGEMENTS
*===================================================
I = 0;
REPETER CHGT 3;
I = I + 1;
ETAB1 = TABLE (ETAB . I);
RIG1 FTOT1 = CLIM1 MAIL1 ETAB1;
*
*               CALCUL THERMIQUE
*-------------------------------
RIGMAT = CONDUCTIVITE MOD1 MAT1;
KTOT1 = RIGMAT ET RIG1;
TEMP1 = RESOU KTOT1 FTOT1;
*
GTEMP1 = GRAD MOD1 TEMP1;
FLUX1 = @CFLUX MOD1 MAT1 TEMP1;
*
SI ((VISU1 . 1) EGA 1);
TRAC TEMP1 MAIL1;
FINSI;
SI ((VISU1 . 2) EGA 1);
TRAC MOD1 FLUX1;
FINSI;
*
*                POST-TRAITEMENT
*  (flux et gradients de T moyens)
*-------------------------------
V1 = MESU MAIL1;
*
FLX1 = (INTG FLUX1 MOD1 T,X) / V1;
FLY1 = (INTG FLUX1 MOD1 T,Y) / V1;
FLZ1 = (INTG FLUX1 MOD1 T,Z) / V1;
*
GTX1 = (INTG GTEMP1 MOD1 T,X) / V1;
GTY1 = (INTG GTEMP1 MOD1 T,Y) / V1;
GTZ1 = (INTG GTEMP1 MOD1 T,Z) / V1;
*
* ECRITURE DES RESULTATS DANS DES TABLES (pour les 6 chargements)
*-----------------------------------------------------------------
C . 1 . I = FLX1;
C . 2 . I = FLY1;
C . 3 . I = FLZ1;
*
D . 1 . I = GTX1;
D . 2 . I = GTY1;
D . 3 . I = GTZ1;
*
*  DEFINITION DU SYTEME LINEAIRE 9*9                               
*-------------------------------------
* !!! mauvais arrangement des equationr pour RESO
*
J0 = 0;
REPETE BOUJ0 3;
J0 = J0 + 1;
KSL0 . (J0 + (3 *(I-1))) . ((3*(J0-1)) + 1) = 0. - GTX1; 
KSL0 . (J0 + (3 *(I-1))) . ((3*(J0-1)) + 2) = 0. - GTY1; 
KSL0 . (J0 + (3 *(I-1))) . ((3*(J0-1)) + 3) = 0. - GTZ1; 
FIN BOUJ0;
*
VSL0 . (1 + (3 *(I-1))) = FLX1;
VSL0 . (2 + (3 *(I-1))) = FLY1;
VSL0 . (3 + (3 *(I-1))) = FLZ1;
*
FIN CHGT;
*
*                     FIN BOUCLE SUR LES CHARGEMENTS
*                           RESOLUTION SYST LINEAIRE
*===================================================
*
* rearrangement des equations KSL0 et VSL0????
*------------------------------------------
*
I0 = 0;
REPETE BOUA0 9;
I0 = I0 + 1;
KSL1 . 1 . I0 = KSL0 . 1 . I0; VSL1 . 1 = VSL0 . 1;
KSL1 . 2 . I0 = KSL0 . 4 . I0; VSL1 . 2 = VSL0 . 4;
KSL1 . 3 . I0 = KSL0 . 7 . I0; VSL1 . 3 = VSL0 . 7;
*
KSL1 . 4 . I0 = KSL0 . 2 . I0; VSL1 . 4 = VSL0 . 2;
KSL1 . 5 . I0 = KSL0 . 5 . I0; VSL1 . 5 = VSL0 . 5;
KSL1 . 6 . I0 = KSL0 . 8 . I0; VSL1 . 6 = VSL0 . 8;
*
KSL1 . 7 . I0 = KSL0 . 3 . I0; VSL1 . 7 = VSL0 . 3;
KSL1 . 8 . I0 = KSL0 . 6 . I0; VSL1 . 8 = VSL0 . 6;
KSL1 . 9 . I0 = KSL0 . 9 . I0; VSL1 . 9 = VSL0 . 9;
*
FIN BOUA0;

* CALCUL DU TENSEUR EFFECTIF
*--------------------------
*
KEFF1 = @SYSLIN KSL1 VSL1;
K = TABLE;
I0 = 0;
J0 = 0;
i = 0;
REPETE BOUI0 3;
I0 = I0 + 1;
K . I0 = TABLE;
J0 = 0;
REPETE BOUJ0 3;
J0 = J0 + 1;
i = i+1;
K . I0 . J0 = KEFF1 . i;
FIN BOUJ0;
FIN BOUI0;
*
*
FINPROC K C D;
************************************************************************
*  FIN DE LA PROCEDURE @KEFFT
************************************************************************
$$$$


$$$$ @CFLUX
*23456789123456789123456789123456789123456789123456789123456789123456789
************************************************************************
************************************************************************
*
*  PROCEDURE DE CALCUL DU FLUX DE CHALEUR
*
*  L. GELEBART 07/01/2009
*
************************************************************************
************************************************************************
DEBPROC @CFLUX MOD1*MMODEL MAT1*MCHAML TEMP1*CHPOINT; 
*
GRADT0 = CHAN TYPE (GRAD MOD1 TEMP1) FLUXCHAL;
*GRADT0 = GRAD MOD1 TEMP1;
GRADT0X = EXCO  T,X GRADT0 ;
GRADT0Y = EXCO  T,Y GRADT0 ;
GRADT0Z = EXCO  T,Z GRADT0 ;
*
* test sur l'anisotropie des materiaux
* (on se limite aux elements massifs 3D)
*
NBCOEF0 = DIME (EXTR MOD1 MATE);
* 
*                       cas des materiaux isotropes
*==================================================
SI (NBCOEF0 EGA 4);
K0 = CHAN TYPE (EXCO K MAT1 SCAL) FLUXCHAL;

* calcul des flux de chaleurs (q=-K.grad(T))
*---------------------------------------------
FLUX0X = K0 * GRADT0X; 
FLUX0Y = K0 * GRADT0Y; 
FLUX0Z = K0 * GRADT0Z; 
FLUX0 = ((0. * FLUX0X) - FLUX0X)
     + ((0. * FLUX0Y) - FLUX0Y)
     + ((0. * FLUX0Z) - FLUX0Z);
FINSI;
* 
*                       cas des materiaux anisotropes
*====================================================
SI ( OU (NBCOEF0 EGA 12) (NBCOEF0 EGA 15));

* Identification des axes du repere local
*----------------------------------------
V1X0 = CHAN TYPE (EXCO V1X MAT1 SCAL) FLUXCHAL;
V1Y0 = CHAN TYPE (EXCO V1Y MAT1 SCAL) FLUXCHAL;
V1Z0 = CHAN TYPE (EXCO V1Z MAT1 SCAL) FLUXCHAL;
V2X0 = CHAN TYPE (EXCO V2X MAT1 SCAL) FLUXCHAL;
V2Y0 = CHAN TYPE (EXCO V2Y MAT1 SCAL) FLUXCHAL;
V2Z0 = CHAN TYPE (EXCO V2Z MAT1 SCAL) FLUXCHAL;
V3X0 = (V1Y0 * V2Z0) - (V1Z0 * V2Y0);
V3Y0 = (V1Z0 * V2X0) - (V1X0 * V2Z0);
V3Z0 = (V1X0 * V2Y0) - (V1Y0 * V2X0);

* Identification de la matrice de conductivite dans les axes locaux
*-------------------------------------------------------------------
SI (NBCOEF0 EGA 12);
K110 = CHAN TYPE (EXCO 'K1' MAT1 SCAL) FLUXCHAL;
K220 = CHAN TYPE (EXCO 'K2' MAT1 SCAL) FLUXCHAL;
K330 = CHAN TYPE (EXCO 'K3' MAT1 SCAL) FLUXCHAL;
K120 = 0.; K130 = 0.; K210 = 0.; K230 = 0.; K310 = 0.; K320 = 0.;
FINSI;
*
SI (NBCOEF0 EGA 15);
K110 = CHAN TYPE (EXCO K11 MAT1 SCAL) FLUXCHAL;
K220 = CHAN TYPE (EXCO K22 MAT1 SCAL) FLUXCHAL;
K330 = CHAN TYPE (EXCO K33 MAT1 SCAL) FLUXCHAL;
K210 = CHAN TYPE (EXCO K21 MAT1 SCAL) FLUXCHAL; K120 = K210;
K310 = CHAN TYPE (EXCO K31 MAT1 SCAL) FLUXCHAL; K130 = K310;
K320 = CHAN TYPE (EXCO K32 MAT1 SCAL) FLUXCHAL; K230 = K320;
FINSI;

* initialisation des matrices :
*       passage, transposee, initiale, inter, resultat
*------------------------------------------------------
P0 = TABLE; P0T = TABLE; INI0 = TABLE; INT0 = TABLE; RES0 = TABLE;
i = 1;
REPETE BOUI0 3;
P0 . i = TABLE; P0T . i = TABLE; INI0 . i = TABLE;
INT0 . i = TABLE; RES0 . i = TABLE;
j=1;
REPETE BOUJ0 3;
P0 . i . j = 0.* K110; P0T . i . j = 0. * k110; 
INI0 . i . j = 0. * K110; INT0 . i . j = 0. * K110; 
RES0 . i . j = 0. * K110; 
j = j + 1;
FIN BOUJ0;
i = i + 1;
FIN BOUI0;

* affectation des matrices de passage et de conductivite
*--------------------------------------------------------
P0 . 1 . 1 = V1X0; INI0 . 1 . 1 = K110;
P0 . 2 . 1 = V1Y0; INI0 . 1 . 2 = K120;
P0 . 3 . 1 = V1Z0; INI0 . 1 . 3 = K130;
P0 . 1 . 2 = V2X0; INI0 . 2 . 1 = K210;
P0 . 2 . 2 = V2Y0; INI0 . 2 . 2 = K220;
P0 . 3 . 2 = V2Z0; INI0 . 2 . 3 = K230;
P0 . 1 . 3 = V3X0; INI0 . 3 . 1 = K310;
P0 . 2 . 3 = V3Y0; INI0 . 3 . 2 = K320;
P0 . 3 . 3 = V3Z0; INI0 . 3 . 3 = K330;

* determination de la matrice transposee
*----------------------------------------
i = 1;
REPETE BOUI0 3;
j = 1;
REPETE BOUJ0 3;
P0T . i . j = P0 . j . i ; 
j = j + 1;
FIN BOUJ0;
i = i + 1;
FIN BOUI0;

* calcul de la matrice intermediaire
*------------------------------------------
i = 1; 
REPETE BOUI0 3;
j = 1;
REPETE BOUJ0 3;
k = 1;
REPETE BOUK0 3;
INT0 . i . j = (INT0 . i . j) + ((INI0 . i . k) * (P0 . k . j));
k = k + 1;
FIN BOUK0;
j = j + 1;
FIN BOUJ0;
i = i + 1;
FIN BOUI0;

* calcul de la matrice de conductivite resultat
*----------------------------------------------
i = 1; 
REPETE BOUI0 3;
j = 1;
REPETE BOUJ0 3;
k = 1;
REPETE BOUK0 3;
RES0 . i . j = (RES0 . i . j) + ((P0T . i . k) * (INT0 . k . j));
k = k + 1;
FIN BOUK0;
j = j + 1;
FIN BOUJ0;
i = i + 1;
FIN BOUI0;

* calcul des flux de chaleurs (q=-K.grad(T))
*---------------------------------------------
GRADT0X = NOMC SCAL GRADT0X;
GRADT0Y = NOMC SCAL GRADT0Y;
GRADT0Z = NOMC SCAL GRADT0Z;

FLUX0X = ((RES0 . 1 . 1) * GRADT0X) + 
         ((RES0 . 1 . 2) * GRADT0Y) + ((RES0 . 1 . 3) * GRADT0Z);
FLUX0Y = ((RES0 . 2 . 1) * GRADT0X) + 
         ((RES0 . 2 . 2) * GRADT0Y) + ((RES0 . 2 . 3) * GRADT0Z);
FLUX0Z = ((RES0 . 3 . 1) * GRADT0X) + 
         ((RES0 . 3 . 2) * GRADT0Y) + ((RES0 . 3 . 3) * GRADT0Z);
FLUX0X = NOMC T,X FLUX0X;
FLUX0Y = NOMC T,Y FLUX0Y;
FLUX0Z = NOMC T,Z FLUX0Z;

FLUX0 = ((0. * FLUX0X) - FLUX0X)
     + ((0. * FLUX0Y) - FLUX0Y)
     + ((0. * FLUX0Z) - FLUX0Z);
*
* FINSI materiaux anisotropes
*------------------------------
FINSI;
*
FINPROC FLUX0;
************************************************************************
* FIN DE LA PROCEDURE @CFLUX
************************************************************************
$$$$



$$$$ @SYSLIN
*23456789123456789123456789123456789123456789123456789123456789123456789
************************************************************************
*
* PROCEDURE POUUR LA RESOLUTION D'UN SYSTEME LINEAIRE
*
* L. GELEBART 24/09/08
*
************************************************************************
************************************************************************
DEBPROC @SYSLIN K1*TABLE F1*TABLE;
DIME0 = VALE DIME;
OPTI DIME 3;
*
IMAX = DIME K1;
P0 = MANU POI1 (0. 0. 0.);
*
* definition des noms des inconnues et de leurs duales
*-----------------------------------------------------
I0 = 0;
REPETE BOU0 IMAX;
I0 = I0+1;
SI (I0 EGA 1);
NOM_I = MOTS (CHAINE 'I' I0);
NOM_D = MOTS (CHAINE 'D' I0);
SINON;
NOM_I = NOM_I ET (MOTS (CHAINE 'I' I0));
NOM_D = NOM_D ET (MOTS (CHAINE 'D' I0));
FINSI;
FIN BOU0;
*
*                             definition de la matrice
*-----------------------------------------------------
I0 = 0;
REPETE BOUI0 IMAX;
I0=I0+1;
J0 = 0;
REPETE BOUJ0 IMAX;
J0 = J0 + 1;
SI ((I0 EGA 1) ET (J0 EGA 1));
KPROG0 = PROG (K1 . I0 . J0);
SINON;
KPROG0 = KPROG0 ET (PROG (K1 . I0 . J0));
FINSI;
FIN BOUJ0;
FIN BOUI0;
*
RIG0 = MANU RIGI P0 NOM_I DUAL NOM_D 'QUEL' KPROG0;
*
*                                definition du vecteur
*-----------------------------------------------------
I0 = 0;
REPETE BOUI0 IMAX;
I0=I0+1;
SI (I0 EGA 1);
V0 = MANU CHPO P0 (F1 . I0) (EXTR NOM_D I0);
SINON;
V0 = V0 + (MANU CHPO P0 (F1 . I0) (EXTR NOM_D I0));
FINSI;
FIN BOUI0;
*
*                                resolution du systeme
*-----------------------------------------------------
V1 = RESOU RIG0 V0; 
*
*         regroupement du resultat sous forme de table
*-----------------------------------------------------
U1 = TABLE;
I0 = 0;
REPETE BOUI0 IMAX;
I0=I0+1;
U1 . I0 = MAXI (EXCO (EXTR NOM_I I0) V1);
FIN BOUI0;
*
OPTI DIME DIME0;
FINPROC U1;
************************************************************************
* FIN DE LA PROCEDURE @SYSLIN
************************************************************************
$$$$



